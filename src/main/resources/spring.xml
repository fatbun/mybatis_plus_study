<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--引入外部配置文件-->
    <context:property-placeholder location="classpath:datasource.properties"/>
    <!--初始化DataSource bean-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>
    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--启动事务管理器注解-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!--spring的事务模板工具-->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!--集成mybatis plus-->
    <!--配置 MapperScan-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.benjamin.dao"/>
    </bean>
    <!--调整 SqlSessionFactory 为 MyBatis-Plus 的 SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <!--引用数据源配置-->
        <property name="dataSource" ref="dataSource"/>
        <!--mabatis xml配置-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->

        <!--mybatis xml配置写在外部-->
        <property name="configuration" ref="configuration"/>
        <!--mybatis 全局配置-->
        <property name="globalConfig" ref="globalConfig"/>
        <!--mybatis 插件-->
        <property name="plugins">
            <array>
                <!--分页插件-->
                <bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor"/>
            </array>
        </property>
    </bean>
    <!--mybatis configuration配置-->
    <bean id="configuration" class="com.baomidou.mybatisplus.core.MybatisConfiguration">
        <!--开启日志-->
        <property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl"/>
        <!--
        开启二级缓存，默认开启true
            1、需要在entity中，实现Serializable接口；
            2、需要在mapper.xml文件中，增加<cache/>标签，启用二级缓存;
        -->
        <property name="cacheEnabled" value="true"/>
    </bean>

    <!--mybatis globalConfig配置-->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
        <!--关闭banner logo-->
        <property name="banner" value="false"/>
        <!--引入dbconfig配置-->
        <property name="dbConfig" ref="dbConfig"/>
        <!--自定义MetaObjectHandler，实现插入、更新字段：dateCreated, lastUpdated-->
        <property name="metaObjectHandler" ref="baseEntityMetaObjectHandler"/>
    </bean>
    <!--自定义填充字段处理器-->
    <bean id="baseEntityMetaObjectHandler" class="com.benjamin.fill.BaseEntityMetaObjectHandler"/>

    <!--mybatis dbConfig配置-->
    <bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig">
        <!--全局数据表名称前缀-->
        <property name="tablePrefix" value="t_"/>
    </bean>

</beans>